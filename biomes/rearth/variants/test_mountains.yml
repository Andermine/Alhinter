id: TEST_MOUNTAINS
type: BIOME
vanilla: minecraft:plains
color: $biomes/colors.yml:PLAINS


vars: &variables
  base: 75
  height: 54
  variationHeight: 4
  terraceHeight: 2.5  // inverted
  terraceThinness: 3.3
  terraceStrength: 13

riverSampler: &riverSampler
  dimensions: 2
  type: EXPRESSION
  variables: *variables
  expression: |
    clamp(abs(rivers(x,z)) - 0.3, -0.2, 0)
  samplers:
    rivers:
      dimensions: 2
      type: OPEN_SIMPLEX_2
      frequency: 0.007

terrain:
  sampler:
    dimensions: 3
    type: EXPRESSION
    variables: *variables
    expression: |
      // positive / higher = solid
      -y + base + (height / 2) * biomeInfluence(x,z)
      + lerp(mountainBasicShape(x,z) * biomeInfluence(x,z) * height, 
        -10, lerp(terracingMask(x,z), 
          0.2, mountainResult(x,z), 
          -0.2, mountainBasicShape(x,z) * biomeInfluence(x,z) * height + vallyNoise(x,z) * variationHeight * 2
          ),
        -20, vallyNoise(x,z) * variationHeight - 40
      )
      + smallRivers(x,z) * 30
    samplers:
      biomeInfluence: &biomeInfluence
        dimensions: 2
        type: EXPRESSION
        expression: |
          clamp((-biomeSize(x,z) - 0.5) * 4, 0, 1)
        functions:
          clamp:
            arguments: [x, a, b] # clamps x between a (low) and b (high)
            expression: min(max(x, a), b)
        samplers:
          biomeSize:
            dimensions: 2
            type: CELLULAR
            return: Distance
            jitter: ${customization.yml:biomeSpread.cellJitter}
            frequency: 1 / ${customization.yml:biomeSpread.cellDistance}
      mountainBasicShape: &baseShape
        dimensions: 2
        type: OPEN_SIMPLEX_2S
        frequency: 0.004
      smallRivers: *riverSampler
      vallyNoise:
        dimensions: 2
        type: FBM
        sampler:
          type: OPEN_SIMPLEX_2S
          frequency: 0.02
        octaves: 2
        lacunarity: 3
        gain: 0.3
      terracingMask:
        dimensions: 2
        type: CELLULAR
        frequency: 0.02
        jitter: 0.7    
        return: CellValue        
      mountainResult:
        dimensions: 2
        type: EXPRESSION
        variables: *variables
        expression: |
          terrace(mountainBasicShape(x,z) * biomeInfluence(x,z) * 1.8, 7) * height / 1.6
        functions:
          terrace:
            arguments: [x, terraceStrength]
            expression: round(x) + 0.5 * (2*(x - round(x)))^terraceStrength
        samplers:
          biomeInfluence: *biomeInfluence
          mountainBasicShape: *baseShape


palette:
  - MOUNTAIN_RIVERS: 319
  - << meta.yml:palette-bottom
