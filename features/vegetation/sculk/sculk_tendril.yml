id: SCULK_TENDRIL
type: FEATURE

# Adds 'webs' of sculk blocks to surface blocks

distributor:
  type: SAMPLER
  sampler:
    type: PROBABILITY
    sampler:
      type: OPEN_SIMPLEX_2
      frequency: 0.03
  threshold: 0.75

locator:
  type: AND
  locators:
    # Check if block is solid block
    - type: PATTERN
      range: &range
        min: -64
        max: 64
      pattern:
        type: MATCH_SET
        blocks: $features/vegetation/meta.yml:sculk-plantable-blocks
        offset: 0
    # Check if there is a surrounding solid block
    - type: OR
      locators:
        # If any side faces are air
        - type: ADJACENT_PATTERN
          range: *range
          pattern:
            type: MATCH_AIR
            offset: 0
        # OR any top / bottom faces are air
        - type: PATTERN
          range: *range
          pattern:
            type: OR
            patterns:
              - type: MATCH_AIR
                offset: 1
              - type: MATCH_AIR
                offset: -1
    # Use noise to create 'webbed' effect
    - type: SAMPLER_3D
      sampler: &sculkSampler
        dimensions: 3
        type: EXPRESSION
        expression: |
          if(|noise(x, y, z)|>0.5,-1,if(kernel(x, y, z)!=0,1,if(border(x,y,z)>0,-0.4,-1)))
        samplers:
          border:
            dimensions: 3
            type: PROBABILITY
            sampler:
              type: OPEN_SIMPLEX_2
              salt: 2585
            frequency: 0.5
          noise: &noise
            # Warped distance2div produces a web effect
            dimensions: 3
            type: DOMAIN_WARP
            amplitude: 14
            warp:
              type: FBM
              octaves: 2
              sampler:
                type: OPEN_SIMPLEX_2S
            sampler:
              type: LINEAR
              min: -1
              max: 0.5
              sampler:
                type: CELLULAR
                return: Distance2Div
                frequency: 0.02
          kernel:
            dimensions: 3
            type: KERNEL # Edge detection
            kernel: [
              [ 0,  1, 0 ],
              [ 1, -1, 1 ],
              [ 0,  1, 0 ]
            ]
            sampler:
              type: EXPRESSION
              expression: noise(x, y, z)>0
              samplers:
                noise: *noise

structures:
  distribution: *sculkSampler
  structures:
    - BLOCK:minecraft:sculk: 2
    - BLOCK:minecraft:sculk_vein: 1